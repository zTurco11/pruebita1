import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression
from sklearn.pipeline import make_pipeline
from sklearn.metrics import mean_squared_error


np.random.seed(42)
X = np.linspace(-3, 3, 20).reshape(-1, 1)
y = X**3 - 3*X + np.random.normal(0, 2, X.shape)  


degrees = [1, 3, 10]  

plt.figure(figsize=(15, 5))

for i, d in enumerate(degrees, 1):
    model = make_pipeline(PolynomialFeatures(degree=d), LinearRegression())
    model.fit(X, y)
    y_pred = model.predict(X)

    plt.subplot(1, 3, i)
    plt.scatter(X, y, color='blue', label="Datos reales")
    plt.plot(X, y_pred, color='red', label=f"Modelo (grado {d})")
    plt.xlabel("X")
    plt.ylabel("y")
    plt.title(f"Regresión Polinómica (grado {d})")
    plt.legend()
    plt.ylim([-20, 20])

plt.show()